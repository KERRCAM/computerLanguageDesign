Writting general logic expressions needed for the parser (the core syntax validation of the program)


EXPRESSION
ID -> (OPERATOR -> ID)* -> SEMI


DEFINITION
KEYWORD -> ID -> EQUALS -> EXPRESSION -> SEMI


FUNCTION DEFINITION
KEYWORD_FUNCTION -> ID -> LPAREN -> (TYPE -> ID)? -> (COMMA -> TYPE -> ID)* -> RPAREN


FUNCTION
FUNCTION DEFINITION -> LBRACE -> ANYTHING VALID -> RBRACE


TESTABLE EXPRESSION 
TYPE BOOL | (ID -> (DOUBLE_EQUALS | LT -> EQUALS? | GT -> EQUALS? | AND | OR etc) -> ID) -> (AND | OR etc -> TESTABLE EXPRESSION)*


CONDITION 
TESTABLE EXPRESSION -> LBRACE -> ANYTHING VALID -> RBRACE


IF STATMENT
KEYWORD_IF -> CONDITION -> (KEYWORD_ELIF -> CONDITION)* -> (KEYWORD_ELSE -> ANYTHING VALID)?